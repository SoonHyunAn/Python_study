{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOVWVEwqreIA8F9m5eem1ll"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"irvhQusofFtV","executionInfo":{"status":"ok","timestamp":1692695052269,"user_tz":-540,"elapsed":2,"user":{"displayName":"안순현","userId":"07368907363245253009"}}},"outputs":[],"source":["import numpy as np"]},{"cell_type":"markdown","source":["6-1. 배열에 원소 추가 및 삭제"],"metadata":{"id":"x-V8ZbKRfKa_"}},{"cell_type":"code","source":["# python list insert()\n","arr= [1, 2, 3, 4, 5,6 ,7 ,8]\n","arr.insert(2, 50)\n","print(arr)\n","\n","arr=np.arange(1, 9)\n","arr=np.insert(arr, 2, 50)\n","print(arr)\n","\n","arr=np.arange(1, 13).reshape(3, 4)\n","arr=np.insert(arr, 2, 50, axis=0)\n","print(arr)\n","\n","arr=np.arange(1, 13).reshape(3, 4)\n","arr=np.insert(arr, 2, 50, axis=0)\n","print(arr)\n","\n","arr=np.arange(1, 13).reshape(3, 4)\n","arr=np.insert(arr, 2, 50) # 축 기준이 없으면 1차원으로 변환함\n","print(arr)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pn0_TYUtfPgx","executionInfo":{"status":"ok","timestamp":1692695212706,"user_tz":-540,"elapsed":2,"user":{"displayName":"안순현","userId":"07368907363245253009"}},"outputId":"0de87e75-d5b7-4f4b-fcc4-f5462d27fcf0"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 2, 50, 3, 4, 5, 6, 7, 8]\n","[ 1  2 50  3  4  5  6  7  8]\n","[[ 1  2  3  4]\n"," [ 5  6  7  8]\n"," [50 50 50 50]\n"," [ 9 10 11 12]]\n","[[ 1  2  3  4]\n"," [ 5  6  7  8]\n"," [50 50 50 50]\n"," [ 9 10 11 12]]\n","[ 1  2 50  3  4  5  6  7  8  9 10 11 12]\n"]}]},{"cell_type":"code","source":["#delete()\n","arr=np.arange(1, 13).reshape(3, 4)\n","arr=np.delete(arr, 2, axis=0)\n","print(arr)\n","\n","arr=np.arange(1, 13).reshape(3, 4)\n","arr=np.delete(arr, 2, axis=0)\n","print(arr)\n","\n","arr=np.arange(1, 13).reshape(3, 4)\n","arr=np.delete(arr, 2) # 축 기준이 없으면 1차원으로 변환함\n","print(arr)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XEc8OuXofy4v","executionInfo":{"status":"ok","timestamp":1692695240436,"user_tz":-540,"elapsed":326,"user":{"displayName":"안순현","userId":"07368907363245253009"}},"outputId":"99cfde86-77a6-47c3-c8a1-766a1978df40"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1 2 3 4]\n"," [5 6 7 8]]\n","[[1 2 3 4]\n"," [5 6 7 8]]\n","[ 1  2  4  5  6  7  8  9 10 11 12]\n"]}]},{"cell_type":"markdown","source":["6-2. 배열 간의 병합"],"metadata":{"id":"gaRjMPtRf79z"}},{"cell_type":"code","source":["#append()\n","arr=np.arange(1, 13).reshape(3, 4)\n","arr2=np.arange(1, 13).reshape(3, 4)\n","\n","print(arr, \"\\n\", arr2, \"\\n\\n\")\n","\n","#axis=0 x축 기준 병합\n","arr3=np.append(arr,arr2,axis=0)\n","print(arr3, \"\\n\")\n","\n","#axis=1 y축 기준 병합\n","arr3=np.append(arr,arr2,axis=1)\n","print(arr3, \"\\n\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"M2aZCXYnf_Tx","executionInfo":{"status":"ok","timestamp":1692695369822,"user_tz":-540,"elapsed":2,"user":{"displayName":"안순현","userId":"07368907363245253009"}},"outputId":"22a7fe4d-0391-427d-95ee-2bc93b9d3739"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 1  2  3  4]\n"," [ 5  6  7  8]\n"," [ 9 10 11 12]] \n"," [[ 1  2  3  4]\n"," [ 5  6  7  8]\n"," [ 9 10 11 12]] \n","\n","\n","[[ 1  2  3  4]\n"," [ 5  6  7  8]\n"," [ 9 10 11 12]\n"," [ 1  2  3  4]\n"," [ 5  6  7  8]\n"," [ 9 10 11 12]] \n","\n","[[ 1  2  3  4  1  2  3  4]\n"," [ 5  6  7  8  5  6  7  8]\n"," [ 9 10 11 12  9 10 11 12]] \n","\n"]}]},{"cell_type":"code","source":["#vstack(), hstack()\n","arr1=np.arange(1, 7).reshape(2, 3)\n","arr2=np.arange(7, 13).reshape(2, 3)\n","\n","arr3=np.vstack((arr1, arr2)) #Vertical\n","print(arr3)\n","arr4=np.hstack((arr1, arr2)) #Horizen\n","print(arr4)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l_xcyJIwgZO1","executionInfo":{"status":"ok","timestamp":1692695562425,"user_tz":-540,"elapsed":490,"user":{"displayName":"안순현","userId":"07368907363245253009"}},"outputId":"871f2b40-9119-44a4-c89e-7bec29566e7c"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 1  2  3]\n"," [ 4  5  6]\n"," [ 7  8  9]\n"," [10 11 12]]\n","[[ 1  2  3  7  8  9]\n"," [ 4  5  6 10 11 12]]\n"]}]},{"cell_type":"code","source":["#concatenate() 지정 가능\n","arr1=np.arange(1, 7).reshape(2, 3)\n","arr2=np.arange(7, 13).reshape(2, 3)\n","\n","arr3=np.concatenate((arr1, arr2), axis=0) #Vertical\n","print(arr3)\n","arr4=np.concatenate((arr1, arr2), axis=1) #Horizen\n","print(arr4)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j-3vBjPChIH-","executionInfo":{"status":"ok","timestamp":1692695610919,"user_tz":-540,"elapsed":320,"user":{"displayName":"안순현","userId":"07368907363245253009"}},"outputId":"18368e61-9c12-4b4c-df53-678288b7cb0f"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 1  2  3]\n"," [ 4  5  6]\n"," [ 7  8  9]\n"," [10 11 12]]\n","[[ 1  2  3  7  8  9]\n"," [ 4  5  6 10 11 12]]\n"]}]},{"cell_type":"markdown","source":["6-3. 배열 분할"],"metadata":{"id":"RQH04Qq-hUyr"}},{"cell_type":"code","source":["#2차원\n","arr=np.arange(1, 13).reshape(3, 4)\n","print(arr)\n","\n","#칼로 몇번 자르냐고 생각하기\n","# vsplit() => axis = 0\n","arr_vsplit=np.vsplit(arr, 3) #홀수만 가능\n","print(arr_vsplit)\n","# hsplit() => axis = 1\n","arr_hsplit=np.hsplit(arr, 2) #짝수만 가능\n","print(arr_hsplit)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ax2_CnjjhUE1","executionInfo":{"status":"ok","timestamp":1692695762606,"user_tz":-540,"elapsed":337,"user":{"displayName":"안순현","userId":"07368907363245253009"}},"outputId":"6e552970-db82-4d7a-c4a9-2a5b2b584439"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 1  2  3  4]\n"," [ 5  6  7  8]\n"," [ 9 10 11 12]]\n","[array([[1, 2, 3, 4]]), array([[5, 6, 7, 8]]), array([[ 9, 10, 11, 12]])]\n","[array([[ 1,  2],\n","       [ 5,  6],\n","       [ 9, 10]]), array([[ 3,  4],\n","       [ 7,  8],\n","       [11, 12]])]\n"]}]},{"cell_type":"code","source":["#3차원\n","arr=np.random.randint(0, 10, (4, 6, 8))\n","print(arr, \"\\n\")\n","\n","# vsplit() => axis = 0\n","arr_vsplit=np.vsplit(arr, 4) #짝수만 가능\n","print(arr_vsplit, \"\\n\", \"\\n\")\n","# hsplit() => axis = 1\n","arr_hsplit=np.hsplit(arr, 2) #짝수만 가능\n","print(arr_hsplit, \"\\n\", \"\\n\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rGeXWp6fh5H8","executionInfo":{"status":"ok","timestamp":1692695925943,"user_tz":-540,"elapsed":2,"user":{"displayName":"안순현","userId":"07368907363245253009"}},"outputId":"69145e16-6b15-4220-f424-24775711ce35"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["[[[4 2 7 8 0 3 5 5]\n","  [3 9 8 5 7 2 5 9]\n","  [5 0 6 3 8 1 5 5]\n","  [3 6 6 7 4 7 3 7]\n","  [1 3 9 9 4 1 1 6]\n","  [5 2 8 1 4 8 4 0]]\n","\n"," [[5 6 5 1 5 7 0 4]\n","  [7 4 6 2 2 0 9 0]\n","  [6 4 6 1 5 1 6 7]\n","  [0 8 8 4 0 0 8 2]\n","  [5 0 6 0 3 4 1 6]\n","  [6 3 1 5 4 3 6 3]]\n","\n"," [[2 6 0 5 0 0 5 1]\n","  [4 5 0 3 8 9 6 9]\n","  [8 9 3 7 4 1 6 7]\n","  [5 7 5 2 8 8 2 8]\n","  [9 3 1 5 6 2 5 0]\n","  [6 8 1 9 3 3 2 0]]\n","\n"," [[1 8 7 2 9 1 9 2]\n","  [5 4 4 2 3 1 5 5]\n","  [3 0 4 7 3 3 2 5]\n","  [3 6 4 3 2 7 8 4]\n","  [0 1 1 1 0 0 8 1]\n","  [8 9 3 3 2 6 6 7]]] \n","\n","[array([[[4, 2, 7, 8, 0, 3, 5, 5],\n","        [3, 9, 8, 5, 7, 2, 5, 9],\n","        [5, 0, 6, 3, 8, 1, 5, 5],\n","        [3, 6, 6, 7, 4, 7, 3, 7],\n","        [1, 3, 9, 9, 4, 1, 1, 6],\n","        [5, 2, 8, 1, 4, 8, 4, 0]]]), array([[[5, 6, 5, 1, 5, 7, 0, 4],\n","        [7, 4, 6, 2, 2, 0, 9, 0],\n","        [6, 4, 6, 1, 5, 1, 6, 7],\n","        [0, 8, 8, 4, 0, 0, 8, 2],\n","        [5, 0, 6, 0, 3, 4, 1, 6],\n","        [6, 3, 1, 5, 4, 3, 6, 3]]]), array([[[2, 6, 0, 5, 0, 0, 5, 1],\n","        [4, 5, 0, 3, 8, 9, 6, 9],\n","        [8, 9, 3, 7, 4, 1, 6, 7],\n","        [5, 7, 5, 2, 8, 8, 2, 8],\n","        [9, 3, 1, 5, 6, 2, 5, 0],\n","        [6, 8, 1, 9, 3, 3, 2, 0]]]), array([[[1, 8, 7, 2, 9, 1, 9, 2],\n","        [5, 4, 4, 2, 3, 1, 5, 5],\n","        [3, 0, 4, 7, 3, 3, 2, 5],\n","        [3, 6, 4, 3, 2, 7, 8, 4],\n","        [0, 1, 1, 1, 0, 0, 8, 1],\n","        [8, 9, 3, 3, 2, 6, 6, 7]]])] \n"," \n","\n","[array([[[4, 2, 7, 8, 0, 3, 5, 5],\n","        [3, 9, 8, 5, 7, 2, 5, 9],\n","        [5, 0, 6, 3, 8, 1, 5, 5]],\n","\n","       [[5, 6, 5, 1, 5, 7, 0, 4],\n","        [7, 4, 6, 2, 2, 0, 9, 0],\n","        [6, 4, 6, 1, 5, 1, 6, 7]],\n","\n","       [[2, 6, 0, 5, 0, 0, 5, 1],\n","        [4, 5, 0, 3, 8, 9, 6, 9],\n","        [8, 9, 3, 7, 4, 1, 6, 7]],\n","\n","       [[1, 8, 7, 2, 9, 1, 9, 2],\n","        [5, 4, 4, 2, 3, 1, 5, 5],\n","        [3, 0, 4, 7, 3, 3, 2, 5]]]), array([[[3, 6, 6, 7, 4, 7, 3, 7],\n","        [1, 3, 9, 9, 4, 1, 1, 6],\n","        [5, 2, 8, 1, 4, 8, 4, 0]],\n","\n","       [[0, 8, 8, 4, 0, 0, 8, 2],\n","        [5, 0, 6, 0, 3, 4, 1, 6],\n","        [6, 3, 1, 5, 4, 3, 6, 3]],\n","\n","       [[5, 7, 5, 2, 8, 8, 2, 8],\n","        [9, 3, 1, 5, 6, 2, 5, 0],\n","        [6, 8, 1, 9, 3, 3, 2, 0]],\n","\n","       [[3, 6, 4, 3, 2, 7, 8, 4],\n","        [0, 1, 1, 1, 0, 0, 8, 1],\n","        [8, 9, 3, 3, 2, 6, 6, 7]]])] \n"," \n","\n"]}]}]}